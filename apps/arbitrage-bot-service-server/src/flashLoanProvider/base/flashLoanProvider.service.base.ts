/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FlashLoanProvider as PrismaFlashLoanProvider,
} from "@prisma/client";

export class FlashLoanProviderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FlashLoanProviderCountArgs, "select">
  ): Promise<number> {
    return this.prisma.flashLoanProvider.count(args);
  }

  async flashLoanProviders(
    args: Prisma.FlashLoanProviderFindManyArgs
  ): Promise<PrismaFlashLoanProvider[]> {
    return this.prisma.flashLoanProvider.findMany(args);
  }
  async flashLoanProvider(
    args: Prisma.FlashLoanProviderFindUniqueArgs
  ): Promise<PrismaFlashLoanProvider | null> {
    return this.prisma.flashLoanProvider.findUnique(args);
  }
  async createFlashLoanProvider(
    args: Prisma.FlashLoanProviderCreateArgs
  ): Promise<PrismaFlashLoanProvider> {
    return this.prisma.flashLoanProvider.create(args);
  }
  async updateFlashLoanProvider(
    args: Prisma.FlashLoanProviderUpdateArgs
  ): Promise<PrismaFlashLoanProvider> {
    return this.prisma.flashLoanProvider.update(args);
  }
  async deleteFlashLoanProvider(
    args: Prisma.FlashLoanProviderDeleteArgs
  ): Promise<PrismaFlashLoanProvider> {
    return this.prisma.flashLoanProvider.delete(args);
  }
}
